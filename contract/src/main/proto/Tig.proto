syntax = "proto3";
package tig.grpc.contract;
import "google/protobuf/empty.proto";


service TigService {
    rpc register (AccountRequest) returns (google.protobuf.Empty);
    rpc login (AccountRequest) returns (LoginReply);
    rpc logout (SessionRequest) returns (google.protobuf.Empty);
    rpc uploadFile (stream FileChunkClientUpload) returns (google.protobuf.Empty);
    rpc editFile (stream FileChunkClientEdit) returns (google.protobuf.Empty);
    rpc deleteFile (DeleteFileRequest) returns (google.protobuf.Empty);
    rpc accessControlFile (AccessControlRequest) returns (google.protobuf.Empty);
    rpc downloadFile (FileRequest) returns (stream FileChunkDownload);
    rpc listFiles (SessionRequest) returns (ListFilesReply);
}


// LOGIN OPERATION
message AccountRequest {
    string username = 1;
    string password = 2;
}

message LoginReply {
    string sessionId = 2;
}

message SessionRequest {
    string sessionId = 1;
}

// FILE STREAM OPERATION
message FileChunkClientUpload {
    bytes content = 1;
    string sessionId = 2;
    string   fileName = 3;
    int32 sequence = 4;
}

message FileChunkClientEdit {
    bytes content = 1;
    string sessionId = 2;
    string fileName = 3;
    string owner = 4;
    int32 sequence = 5;
}

message FileChunkDownload {
    bytes content = 1;
    int32 sequence = 2;
}

//FILE OPERATION
message FileRequest {
    string sessionId = 1;
    string fileName = 2;
    string owner = 3;
}

//ACCESS CONTROL OPERATION
message AccessControlRequest {
    string sessionId = 1;
    string fileName = 2;
    string target = 3;
    PermissionEnum permission = 4;
}
enum PermissionEnum {
    READ = 0;
    WRITE = 1;
    NONE = 2;
}

//DELETE FILE OPERATION
message DeleteFileRequest {
    string sessionId = 1;
    string filename = 2;
}

//LIST FILES
message ListFilesReply {
    repeated string fileInfo = 1;
}

//**************************** CUSTOM PROTOCOL ******************************


service CustomProtocolTigService {
    rpc login (CustomProtocolMessage) returns (CustomProtocolMessage);
    rpc logout (CustomProtocolMessage) returns (CustomProtocolMessage);
}

message Signature {
    string signerId = 1;
    bytes value = 2; // hash of the message that is encrypted with the receiver public key
}

message CustomLoginRequest {
    bytes message = 1; //message is a serialized AccountRequest
    bytes encryptionKey = 2; //encrypted with the server public key
    bytes clientPubKey = 3;
}

message CustomProtocolLogoutRequest {
    string nonce = 1;
}

message CustomProtocolLogoutReply {
}

message CustomProtocolMessage {
    bytes message = 1; //message is a serialized message encrypted with the sessionKey
    bytes signature = 2; //Signature is the hash
}

message CustomProtocolLoginReply {
    bytes secretKey = 1;
    string sessionId = 2;
}


//**************************** Key Server ******************************

service TigKeyService {
    rpc helloTigKey (HelloTigKeyRequest) returns (HelloTigKeyReply);
    rpc registerTigKey (AccountRequest) returns (google.protobuf.Empty);
    rpc loginTigKey (AccountRequest) returns (LoginReply);
    rpc logoutTigKey (TigKeySessionIdMessage) returns (google.protobuf.Empty);
    rpc keyFileTigKey (KeyFileTigKeyRequest) returns (KeyFileTigKeyReply);
    //rpc keyFileRecoverTigKey (keyFileRecoverTigKeyRequest) returns (keyFileRecoverTigKeyReply);
    rpc canEditTigKey (KeyFileTigKeyRequest) returns (CanEditTigKeyReply);
    rpc listFileTigKey (TigKeySessionIdMessage) returns (ListFilesReply);
    rpc accessControlFileTigKey (AccessControlRequest) returns (google.protobuf.Empty);
    rpc deleteFileTigKey (DeleteFileRequest) returns (google.protobuf.Empty);

}


message TigKeySessionIdMessage {
    string sessionId = 1;
}

message KeyFileTigKeyRequest {
    TigKeySessionIdMessage sessionId = 1;
    string owner = 2;
    string filename = 3;
}

message KeyFileTigKeyReply {
    bytes key = 1;
    bytes iv = 2;
}

message CanEditTigKeyReply {
    bytes newKeyFile = 1;
    bytes iv = 2;
}

message HelloTigKeyRequest {
    string request = 1;
}

message HelloTigKeyReply {
    string request = 1;
}

//**************************** Backup BD ******************************


service TigBackupBDService {

}